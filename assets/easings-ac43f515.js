const u={inSine:t=>1-Math.cos(t*Math.PI/2),outSine:t=>Math.sin(t*Math.PI/2),inOutSine:t=>-.5*(Math.cos(Math.PI*t)-1),inQuad:t=>t*t,outQuad:t=>1-(1-t)*(1-t),inOutQuad:t=>t<.5?2*t*t:-1+(4-2*t)*t,inCubic:t=>t*t*t,outCubic:t=>1-Math.pow(1-t,3),inOutCubic:t=>t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)/2,inQuart:t=>t*t*t*t,outQuart:t=>1-Math.pow(1-t,4),inOutQuart:t=>t<.5?8*t*t*t*t:1-Math.pow(-2*t+2,4)/2,inQuint:t=>t*t*t*t*t,outQuint:t=>1-Math.pow(1-t,5),inOutQuint:t=>t<.5?16*t*t*t*t*t:1-Math.pow(-2*t+2,5)/2,inExpo:t=>t===0?0:Math.pow(2,10*t-10),outExpo:t=>t===1?1:1-Math.pow(2,-10*t),inCirc:t=>1-Math.sqrt(1-t*t),outCirc:t=>Math.sqrt(1-Math.pow(t-1,2)),inOutCirc:t=>t<.5?(1-Math.sqrt(1-Math.pow(2*t,2)))/2:(Math.sqrt(1-Math.pow(-2*t+2,2))+1)/2,outSquareRoot:t=>Math.sqrt(t),inSquareRoot:t=>1-Math.sqrt(1-t),linear:t=>t,inBack:(t,i=1.70158)=>t*t*((i+1)*t-i),outBack:(t,i=1.70158)=>{const a=t/1-1;return a*a*((i+1)*a+i)+1},inOutBack(t,i=1.70158){const a=t*2,o=a-2,n=i*1.525;return a<1?.5*a*a*((n+1)*a-n):.5*(o*o*((n+1)*o+n)+2)},inElastic:(t,i=.7)=>{if(t===0||t===1)return t;const o=t/1-1,n=1-i,s=n/(2*Math.PI)*Math.asin(1);return-(Math.pow(2,10*o)*Math.sin((o-s)*(2*Math.PI)/n))},outElastic:(t,i=.7)=>{if(t===0||t===1)return t;const a=1-i,o=t*2,n=a/(2*Math.PI)*Math.asin(1);return Math.pow(2,-10*o)*Math.sin((o-n)*(2*Math.PI)/a)+1},inOutElastic:(t,i=.65)=>{if(t===0||t===1)return t;const a=1-i,o=t*2,n=o-1,s=a/(2*Math.PI)*Math.asin(1);return o<1?-.5*(Math.pow(2,10*n)*Math.sin((n-s)*(2*Math.PI)/a)):Math.pow(2,-10*n)*Math.sin((n-s)*(2*Math.PI)/a)*.5+1}};export{u as e};
