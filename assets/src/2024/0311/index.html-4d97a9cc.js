var v=Object.defineProperty;var w=(h,t,i)=>t in h?v(h,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):h[t]=i;var s=(h,t,i)=>(w(h,typeof t!="symbol"?t+"":t,i),i);import"../../../modulepreload-polyfill-3cfb730f.js";/* empty css                     */import{c as S}from"../../../index-8d178fc0.js";import{l as W}from"../../../loop-9a51de3b.js";import{s as b,r as k}from"../../../utils-410b772c.js";class y{constructor({iterations:t=3,minSize:i=20,size:a,palette:e}){s(this,"iterations");s(this,"minSize");s(this,"tiles");s(this,"size");s(this,"tileChanceMin",.7);s(this,"palette");s(this,"padding",10);s(this,"makeTiles",({iterations:t,currentLevel:i=1,tileChance:a=1,tile:e=this.tiles})=>{if(t===0)return;e.inner=[];let{x:l,y:n,size:g}=e,o=2,d=(g-this.padding)/o;if(d<this.minSize)return;let c=0;for(let r=0;r<o;r++)for(let f=0;f<o;f++){let p={x:l+this.padding+f*d,y:n+this.padding+r*d,size:d-this.padding,progress:0,color:this.palette[i%this.palette.length],level:i,inner:[],parent:e,index:c++};Math.random()<a&&(e.inner.push(p),this.makeTiles({iterations:t-1,currentLevel:i+1,tile:p,tileChance:Math.max(a-.1,this.tileChanceMin)}))}});this.iterations=t,this.minSize=i,this.size=a,this.palette=e,this.tiles={x:0,y:0,size:this.size,progress:0,color:e[0],level:0,inner:[],parent:null,index:0},this.makeTiles({iterations:this.iterations,currentLevel:1,tile:this.tiles})}}const u=(h,t,i=0,a)=>{let e=t/2+i,l=(h.level+1)*100,n=t/h.inner.length,g={...h,treeX:e,treeY:l,treeWidth:t,treeOffset:i,parent:a,inner:[]};return g.inner=h.inner.map((o,d)=>{let c=d*n+i+n*.1;return u(o,n*.8,c,g)}),g};class A{constructor(t){s(this,"tilesEven");s(this,"tilesWithTree");s(this,"lastTime",null);s(this,"lastAdd",null);s(this,"addSpeed",1e3/10);s(this,"gap",15);s(this,"animating",[]);s(this,"stackQueue",[]);s(this,"gfxTile");s(this,"grxTree");s(this,"treeWidth");s(this,"treeHeight");s(this,"mainSize");s(this,"methodIn","push");s(this,"methodOut","pop");s(this,"drawTree",(t,i)=>{let a=this.grxTree.ctx,e=l=>{a.fillStyle=l.color,a.beginPath(),a.arc(l.treeX,l.treeY,Math.max((5-l.level)*5,5),0,2*Math.PI),a.fill(),l.inner.forEach(n=>{e(n)})};e(i),t.globalAlpha=.4,t.drawImage(this.grxTree.canvas,this.mainSize,0,this.treeWidth,this.treeHeight),t.globalAlpha=1,a.clearRect(0,0,this.treeWidth,this.treeHeight)});s(this,"drawWithoutGrow",(t,i)=>{if(this.lastTime||(this.lastTime=i),this.lastAdd||(this.lastAdd=i),this.lastTime=i,i-this.lastAdd>this.addSpeed){this.lastAdd=i;let e=this.methodOut==="pop"?this.stackQueue.pop():this.stackQueue.shift();if(e){let l=e.size,n=e.x+e.size/2,o=e.y+e.size/2-l/2,d=n-l/2,c=this.gfxTile.ctx;c.fillStyle=e.color,c.beginPath(),c.rect(d,o,l,l),c.fill();let r=this.grxTree.ctx;r.fillStyle=e.color,r.beginPath();let f=Math.max((5-e.level)*5,5);r.ellipse(e.treeX,e.treeY,f,f,0,0,Math.PI*2),r.fill(),e.parent&&(r.strokeStyle=e.color,r.lineWidth=.5,r.beginPath(),r.moveTo(e.treeX,e.treeY),r.lineTo(e.parent.treeX,e.parent.treeY),r.stroke()),this.methodIn==="push"?this.stackQueue.push(...e.inner):this.stackQueue.unshift(...e.inner)}}return t.drawImage(this.gfxTile.canvas,0,0,this.mainSize,this.mainSize),t.drawImage(this.grxTree.canvas,this.mainSize,0,this.treeWidth,this.treeHeight),this.stackQueue.length?!1:(this.reset(),!0)});s(this,"reset",()=>{this.lastTime=null,this.lastAdd=null,this.animating=[this.tilesWithTree],this.stackQueue=[this.tilesWithTree]});this.mainSize=t.size,this.treeWidth=t.size*2,this.treeHeight=t.size*2,this.tilesEven=t,this.tilesWithTree=u(this.tilesEven.tiles,this.treeWidth),this.animating=[this.tilesWithTree],this.stackQueue=[this.tilesWithTree];let i=document.createElement("canvas");i.width=this.tilesEven.size,i.height=this.tilesEven.size,this.gfxTile={canvas:i,ctx:i.getContext("2d")};let a=document.createElement("canvas");a.width=this.treeWidth,a.height=this.treeHeight,this.grxTree={canvas:a,ctx:a.getContext("2d")}}}const T=1200,C=window.innerHeight,{ctx:x}=S(T,C);let z,E=[["#dc5132","#a46589","#7a82b8","#8ad0a6","#c4f0a8","#a0bb07","#ffcf33","#ec9f05"],["#533a71","#454a96","#6184d8","#50c5b7","#9cec5b","#f0f465","#ff4a1c","#ed254e"],["#874286","#856596","#f9c8ce","#a8d7a8","#b6cccc","#8aadbc","#7a7eb8","#fc814a"],["#87425d","#3c2e6b","#0081af","#a7d6c3","#285943","#8a8fbd","#9a79b8","#fcee49"]],I=new y({iterations:3,minSize:30,size:T*.32,palette:b(k(E))}),m=new A(I);m.drawTree(x,m.tilesWithTree);m.methodIn="push";m.methodOut="shift";const M=h=>{m.drawWithoutGrow(x,h)&&z.stop()};z=W(M);
