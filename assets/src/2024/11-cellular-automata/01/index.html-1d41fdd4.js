var d=Object.defineProperty;var g=(r,t,e)=>t in r?d(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var i=(r,t,e)=>(g(r,typeof t!="symbol"?t+"":t,e),e);import"../../../../modulepreload-polyfill-3cfb730f.js";/* empty css                        */import{c as w}from"../../../../index-8d178fc0.js";import{S as z}from"../../../../sizes-34512445.js";import{l as S}from"../../../../loop-9a51de3b.js";import{a as p}from"../../../../lil-gui.esm-da8e181f.js";import{r as m}from"../../../../utils-410b772c.js";import"../../../../_commonjsHelpers-725317a4.js";let f=new z,{ctx:x}=w(f.width,f.height);class G{constructor({cols:t,maxGenerations:e,seed:s="center",rule:l=90,leftVal:n=0,rightVal:o=0}){i(this,"cols");i(this,"generation",0);i(this,"cells");i(this,"maxGenerations");i(this,"ruleset");i(this,"seed","center");i(this,"leftVal");i(this,"rightVal");i(this,"step",()=>this.maxGenerations===void 0||this.generation<this.maxGenerations?(this.nextGeneration(),!0):!1);i(this,"getSeedGeneration",()=>{if(this.seed==="center"){let t=new Array(this.cols).fill(0);return t[Math.floor(this.cols/2)]=1,t}else if(this.seed==="specks"){let t=new Array(this.cols).fill(0),e=Math.floor(m(5,10));for(;e<this.cols+10;)t[e]=1,e+=Math.floor(m(5,10));return t}else return this.cells[0].map(()=>Math.random()>.5?1:0)});i(this,"nextGeneration",()=>{let t=this.cells[this.generation],e=new Array(t.length).fill(0);for(let s=0;s<t.length;s++){let l=t[s-1]||this.leftVal,n=t[s],o=t[s+1]||this.rightVal,u=parseInt(`${l}${n}${o}`,2);e[s]=this.ruleset[7-u]}this.cells.push(e),this.generation++});i(this,"restart",()=>{this.generation=0,this.cells=[this.cells[0]]});i(this,"regenerateFromSeed",()=>{this.cells=[this.getSeedGeneration()],this.generation=0});i(this,"adjustCols",t=>{let e=this.generation;this.cols=t,this.cells=[this.getSeedGeneration()],this.generation=0;for(let s=0;s<e;s++)this.nextGeneration()});this.cols=t,this.maxGenerations=e,this.cells=[new Array(t).fill(0)],this.seed=s,this.rule=l,this.leftVal=n,this.rightVal=o,this.cells[0]=this.getSeedGeneration()}get currentGeneration(){return this.cells[this.generation]}get rule(){return parseInt(this.ruleset.join(""),2)}set rule(t){let e=t.toString(2).padStart(8,"0");this.ruleset=e.split("").map(s=>parseInt(s))}}class V{constructor({cellSize:t,sizes:e,ctx:s,seed:l="center"}){i(this,"automata");i(this,"sizes");i(this,"ctx");i(this,"_cellSize");i(this,"firstDraw",()=>{this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,this.sizes.width,this.sizes.height),this.drawGeneration(0)});i(this,"drawAll",()=>{this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,this.sizes.width,this.sizes.height);for(let t=0;t<this.automata.generation;t++)this.drawGeneration(t)});i(this,"restart",()=>{let{ctx:t}=this;this.automata.restart(),t.fillStyle="#fff",t.fillRect(0,0,this.sizes.width,this.sizes.height),this.drawGeneration(0)});i(this,"init",t=>{let{sizes:e,_cellSize:s}=this;this.automata=new G({cols:Math.floor(e.width/s),maxGenerations:Math.floor(e.height/s),seed:t??this.automata.seed??"center",rule:this.automata?this.automata.rule:90,leftVal:this.automata?this.automata.leftVal:0,rightVal:this.automata?this.automata.rightVal:0}),this.firstDraw()});i(this,"regenerate",()=>{this.automata.regenerateFromSeed(),this.firstDraw()});i(this,"step",()=>{this.automata.step()&&this.drawGeneration(this.automata.generation)});i(this,"drawGeneration",t=>{let{ctx:e,sizes:s}=this,l=this.automata.cells[t],n=t*this._cellSize;e.save();let o=l.length*this._cellSize,u=(s.width-o)/2;e.translate(u,0);for(let c=0;c<l.length;c++)l[c]===1&&(e.fillStyle="black",e.fillRect(c*this._cellSize,n,this._cellSize,this._cellSize));e.restore()});this._cellSize=t,this.sizes=e,this.ctx=s,this.init(l)}get rule(){return this.automata.rule}set rule(t){this.automata.rule=t}get seed(){return this.automata.seed}set seed(t){this.init(t)}set cellSize(t){this._cellSize=t,this.automata.adjustCols(Math.floor(this.sizes.width/t)),this.automata.maxGenerations=Math.floor(this.sizes.height/t),this.drawAll()}get cellSize(){return this._cellSize}set leftVal(t){this.automata.leftVal=t,this.restart()}set rightVal(t){this.automata.rightVal=t,this.restart()}get leftVal(){return this.automata.leftVal}get rightVal(){return this.automata.rightVal}}const a=new V({cellSize:15,sizes:f,ctx:x});window.automata=a;const h=new p;h.add(a,"seed",["center","random","specks"]);h.add(a,"cellSize",1,40,1);h.add(a,"rule",0,255,1).onChange(()=>a.restart());h.add(a,"leftVal",[0,1]);h.add(a,"rightVal",[0,1]);h.add(a,"restart");h.add(a,"regenerate");S(a.step);
