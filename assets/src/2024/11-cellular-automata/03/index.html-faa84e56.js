var z=Object.defineProperty;var y=(s,t,e)=>t in s?z(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var i=(s,t,e)=>(y(s,typeof t!="symbol"?t+"":t,e),e);import"../../../../modulepreload-polyfill-3cfb730f.js";/* empty css                        */import{c as C}from"../../../../index-8d178fc0.js";import{S as I}from"../../../../sizes-34512445.js";import{l as b}from"../../../../loop-9a51de3b.js";import{a as R}from"../../../../lil-gui.esm-da8e181f.js";import{c as d}from"../../../../index-168b6c61.js";import{r as n}from"../../../../utils-410b772c.js";import"../../../../_commonjsHelpers-725317a4.js";let f=new I,{ctx:M}=C(f.width,f.height);class G{constructor({cols:t,seed:e="center",rule:l=90}){i(this,"generation",0);i(this,"cells");i(this,"ruleset");i(this,"seed");i(this,"getSeedGeneration",t=>{let e=new Array(t).fill(0);switch(this.seed){case"random":e=e.map(()=>Math.random()>.5?1:0);break;case"center":e[Math.floor(t/2)]=1;break;case"specks":let l=Math.floor(n(5,10));for(;l<t;)e[l]=1,l+=Math.floor(n(5,10));break;case"flecks":let r=Math.floor(n(1,6)),h=Math.floor(n(3,8));for(;r<t;)e[r]=1,h--,h<=0?(r+=Math.floor(n(5,10)),h=Math.floor(n(3,8))):r++;break}return e});i(this,"nextGeneration",()=>{let t=this.cells,e=new Array(t.length).fill(0);for(let l=0;l<t.length;l++){let r=t[l-1]||0,h=t[l],c=t[l+1]||0;e[l]=this.applyRule(r,h,c)}this.cells=e,this.generation++});this.seed=e,this.cells=this.getSeedGeneration(t),this.rule=l}get cols(){return this.cells.length}set cols(t){this.changeCols(t)}get rule(){return parseInt(this.ruleset.join(""),2)}set rule(t){let e=t.toString(2).padStart(8,"0");this.ruleset=e.split("").map(l=>parseInt(l))}stepCount(t){let e=0;for(;e<t;)this.nextGeneration(),e++}applyRule(t,e,l){return this.ruleset[7-parseInt(`${t}${e}${l}`,2)]}restart(){this.cells=this.getSeedGeneration(this.cells.length),this.generation=0}changeCols(t){let e=this.cells.length;if(t>e){let l=t-e,r=new Array(Math.floor(l/2)).fill(0),h=new Array(Math.ceil(l/2)).fill(0);this.cells=[...r,...this.cells,...h]}else{let l=e-t;this.cells=this.cells.slice(Math.floor(l/2),this.cells.length-Math.ceil(l/2))}}}class k extends G{constructor({cols:e,sizes:l,ctx:r,seed:h="center",rule:c,colors:g}){super({cols:e,seed:h,rule:c});i(this,"sizes");i(this,"ctx");i(this,"maxRows");i(this,"paused",!1);i(this,"lastTime",0);i(this,"frameRate",50);i(this,"cellSize");i(this,"topOffset",0);i(this,"colors",["#fff","#000"]);i(this,"colorIndexStore");i(this,"colorMixMode","hsi");i(this,"colorChange",.2);i(this,"bg",()=>{this.ctx.fillStyle=this.colors[0],this.ctx.fillRect(0,0,this.sizes.width,this.sizes.height)});i(this,"drawGeneration",()=>{let{ctx:e}=this,l=this.cells;for(let r=0;r<l.length;r++){this.cells[r]===1?this.colorIndexStore[r]=Math.max(this.colorIndexStore[r]+this.colorChange,this.colors.length+1):this.colorIndexStore[r]=Math.min(this.colorIndexStore[r]-this.colorChange,0);let c=Math.abs(this.colorIndexStore[r]),g=Math.floor(c),x=this.colors[g%this.colors.length],w=this.colors[(g+1)%this.colors.length];e.fillStyle=d.mix(x,w,c%1,this.colorMixMode).hex(),e.fillRect(r*this.cellSize,this.topOffset,this.cellSize,this.cellSize)}this.topOffset+=this.cellSize,this.topOffset>=this.sizes.height&&(this.topOffset=0)});i(this,"loop",e=>{e-this.lastTime>1e3/this.frameRate&&(this.lastTime=e,this.paused||this.step())});i(this,"pause",()=>{this.paused=!0});i(this,"play",()=>{this.paused=!1});this.cellSize=Math.floor(l.width/e),this.maxRows=Math.floor(l.height/this.cellSize),this.sizes=l,this.ctx=r,g&&(this.colors=g),this.colorIndexStore=this.cells.map(x=>x)}set cols(e){super.cols=e,this.cellSize=Math.ceil(this.sizes.width/e),this.maxRows=Math.ceil(this.sizes.height/this.cellSize),this.colorIndexStore=this.cells.map(()=>0)}get cols(){return super.cols}step(){this.nextGeneration(),this.drawGeneration()}restart(){super.restart(),this.topOffset=0,this.colorIndexStore=this.cells.map(()=>0),this.drawGeneration()}}const o=new k({cols:50,sizes:f,ctx:M,colors:[d.random().hex(),d.random().hex(),d.random().hex()]}),S={step10:()=>o.stepCount(10),step20:()=>o.stepCount(20),step:()=>o.step(),cols:o.cols},a=new R;a.add(o,"seed",["center","random","specks","flecks"]).onChange(()=>o.restart());a.add(o,"rule",0,255,1);a.add(o,"frameRate",1,100,1);a.add(o,"restart");a.add(o,"generation").disable().listen();a.add(S,"cols",10,200,1).onFinishChange(s=>{o.cols=s});let p=a.addFolder("colors"),m={};for(let s=0;s<o.colors.length;s++)m[`${s}`]=o.colors[s],p.addColor(m,`${s}`).onChange(t=>{o.colors[s]=t});m.randomize=()=>{for(let s=0;s<o.colors.length;s++)o.colors[s]=d.random().hex(),m[`${s}`]=o.colors[s];p.controllersRecursive().forEach(s=>{s.updateDisplay()})};p.add(o,"colorMixMode",["rgb","hsl","hsv","hsi","lab","oklab","lch","oklch","hcl","lrgb"]);p.add(o,"colorChange",0,1,.01);p.onChange(()=>{v()});p.add(m,"randomize");let u=a.addFolder("play/pause/step").close();u.add(o,"pause");u.add(o,"play");u.add(S,"step");u.add(S,"step10");b(o.loop);const v=()=>{for(let s=0;s<f.width;s++){let t=s/f.width*o.colors.length,e=Math.floor(t),l=t%1,r=o.colors[e%o.colors.length],h=o.colors[(e+1)%o.colors.length];M.fillStyle=d.mix(r,h,l,o.colorMixMode).hex(),M.fillRect(s,f.height-50,1,50)}};
