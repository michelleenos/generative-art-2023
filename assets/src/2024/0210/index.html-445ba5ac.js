var N=Object.defineProperty;var _=(n,t,e)=>t in n?N(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var i=(n,t,e)=>(_(n,typeof t!="symbol"?t+"":t,e),e);import"../../../modulepreload-polyfill-3cfb730f.js";import{r as I,b as q,c as V}from"../../../color-utils-29147277.js";import{l as X}from"../../../loop-9a51de3b.js";import{s as k,r as d,l as M}from"../../../utils-410b772c.js";/* empty css                     */import{t as Y}from"../../../tweakpane-9ece380b.js";import{c as u}from"../../../dom-07b9d998.js";import"../../../_commonjsHelpers-725317a4.js";let T={diag1:[-Math.PI*.25,Math.PI*.75],diag2:[Math.PI*.25,-Math.PI*.75],horz:[0,Math.PI],vert:[Math.PI*.5,-Math.PI*.5]};const L=[["diag1","diag2"],["diag1","horz"],["diag1","vert"],["diag2","horz"],["diag2","vert"]];class U{constructor({palette:t,pixelDensity:e=1,stepRate:s=1200,maxLines:h=100,maxLineLength:l=500,minLineLength:r=20,width:c=500,height:o=500,weight:p=1,stepMult:y=1}){i(this,"drawing",!1);i(this,"pointIndexCurrent",0);i(this,"color","");i(this,"palette",[]);i(this,"angleTypes");i(this,"angleOptions");i(this,"angleCurrent",0);i(this,"angle",0);i(this,"pointsToDraw",[]);i(this,"linesDrawn",0);i(this,"maxLines");i(this,"maxLineLength");i(this,"minLineLength");i(this,"stepRate");i(this,"stepMult");i(this,"weight");i(this,"pixelDensity");i(this,"width");i(this,"height");i(this,"offscreenCanvas");i(this,"offscreenCtx");i(this,"done",!1);i(this,"startAttempts",0);i(this,"maxStartAttempts",40);i(this,"isHorizontal",()=>this.angleTypes.includes("horz"));i(this,"isVertical",()=>this.angleTypes.includes("vert"));i(this,"getBlankPixel",t=>{let e=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height),h=(e+s*t.width)*4*this.pixelDensity,l=10,r=0;for(;r<l;){if(t.data[h]===255)return[e,s];e=Math.floor(Math.random()*this.width),s=Math.floor(Math.random()*this.height),h=(e+s*t.width)*4*this.pixelDensity,r++}});i(this,"getLinePoints",(t,e,s)=>{let h=e,l=s,r=[];for(;r.length<this.maxLineLength;){let c=Math.round(h+Math.cos(this.angle)*this.stepMult),o=Math.round(l+Math.sin(this.angle)*this.stepMult),p=(c+o*t.width)*4*this.pixelDensity;if(t.data[p]<255||c<-10||c>=this.width+10||o<-10||o>=this.height+10)break;r.push([h,l]),h=c,l=o}return r.length<this.minLineLength?!1:r});i(this,"attemptStart",()=>{if(this.startAttempts>this.maxStartAttempts){this.done=!0,console.log("done with lines: ",this.linesDrawn);return}let t=this.offscreenCtx.getImageData(0,0,this.offscreenCanvas.width,this.offscreenCanvas.height),e=this.getBlankPixel(t);if(!e){this.startAttempts++;return}this.angle=d(this.angleOptions),this.color=d(this.palette);let s=this.getLinePoints(t,e[0],e[1]);if(!s){this.startAttempts++;return}this.pointsToDraw=s,this.pointIndexCurrent=0,this.drawing=!0,this.startAttempts=0});i(this,"update",(t,e)=>{if(!this.drawing&&this.linesDrawn>=this.maxLines)return this.done=!0,!1;let s=Math.round(e/1e3*this.stepRate),h=0;for(;h<s;){if(this.done||this.linesDrawn>=this.maxLines)return this.done=!0,!1;this.drawing?this.drawStep(t):this.attemptStart(),h++}return!0});i(this,"drawStep",t=>{t.strokeStyle=this.color,t.lineCap="round",t.lineWidth=this.weight;let e=this.pointsToDraw[this.pointIndexCurrent+1],s=this.pointsToDraw[this.pointIndexCurrent];t.beginPath(),t.moveTo(s[0],s[1]),t.lineTo(e[0],e[1]),t.stroke(),this.offscreenCtx.beginPath(),this.offscreenCtx.moveTo(s[0],s[1]),this.offscreenCtx.lineTo(e[0],e[1]),this.offscreenCtx.lineWidth=this.weight*4,this.offscreenCtx.stroke(),this.pointIndexCurrent>=this.pointsToDraw.length-2&&(this.drawing=!1,this.linesDrawn++),this.pointIndexCurrent++});i(this,"stepInFrame",()=>{});this.drawing=!1,this.palette=t,this.pixelDensity=e,this.stepRate=s,this.maxLines=h,this.maxLineLength=l,this.minLineLength=r,this.width=c,this.height=o,this.weight=p,this.stepMult=y,this.offscreenCanvas=document.createElement("canvas"),this.offscreenCtx=this.offscreenCanvas.getContext("2d",{willReadFrequently:!0}),this.offscreenCanvas.width=this.width*this.pixelDensity,this.offscreenCanvas.height=this.height*this.pixelDensity,this.offscreenCtx.scale(this.pixelDensity,this.pixelDensity),this.offscreenCtx.fillStyle="#fff",this.offscreenCtx.fillRect(0,0,this.width,this.height),k(L),this.angleTypes=[L[0][0],L[0][1]],this.angleOptions=[...T[this.angleTypes[0]],...T[this.angleTypes[1]]]}}class E{constructor(t){i(this,"x");i(this,"y");i(this,"width");i(this,"height");i(this,"_next");i(this,"currentColor",{r:255,g:255,b:255});i(this,"pixelDensity");i(this,"done",!1);i(this,"promise");i(this,"resolve");i(this,"next",()=>{let[t,e]=this._next(this.x,this.y);if(t>=this.width||e>=this.height||t<0||e<0){this.done=!0,this.resolve();return}this.x=t,this.y=e});i(this,"isOutOfBounds",(t,e)=>t>=this.width||e>=this.height||t<0||e<0);i(this,"step",t=>{if(this.done)return;let e=this.x,s=this.y,h=(e+s*t.width)*4;this.currentColor=this.updateColor(t,e,s),t.data[h]=this.currentColor.r,t.data[h+1]=this.currentColor.g,t.data[h+2]=this.currentColor.b,t.data[h+3]=255,this.next()});this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this.pixelDensity=t.pixelDensity??1,this._next=t.nextCb??((s,h)=>[s,h+1]);let e;this.promise=new Promise(s=>e=s),this.resolve=e}}class H{constructor({direction:t="right",width:e,height:s,stepRate:h=200,pixelDensity:l=1,type:r="blur"}){i(this,"direction");i(this,"width");i(this,"height");i(this,"pixelDensity");i(this,"offscreenCanvas");i(this,"offscreenCtx");i(this,"promises",[]);i(this,"done",!1);i(this,"stepRate");i(this,"type");i(this,"lastDelta",0);i(this,"pixels",[]);i(this,"init",()=>{this.pixels=[],this.promises=[],this.done=!1;let t=this.vertical?this.width:this.height;t*=this.pixelDensity;let e=this.direction==="down"||this.direction==="right"?0:t-1;for(let s=0;s<t;s++){let[h,l]=this.vertical?[s,e]:[e,s],r=this.createPixel(h,l);this.pixels.push(r),this.promises.push(r.promise)}Promise.all(this.promises).then(()=>this.done=!0)});i(this,"update",(t,e)=>{if(this.done)return;let s=this.lastDelta+e,h=Math.round(s*(this.stepRate/1e3)),l=0;for(;l<h;){this.offscreenCtx.drawImage(t.canvas,0,0,this.width*this.pixelDensity,this.height*this.pixelDensity);let r=this.offscreenCtx.getImageData(0,0,this.offscreenCanvas.width,this.offscreenCanvas.height);this.pixels.forEach(c=>{for(let o=0;o<this.pixelDensity;o++)c.step(r)}),t.putImageData(r,0,0),l++}});this.direction=t,this.width=e,this.height=s,this.pixelDensity=l,this.stepRate=h,this.type=r,this.offscreenCanvas=document.createElement("canvas"),this.offscreenCtx=this.offscreenCanvas.getContext("2d",{willReadFrequently:!0}),this.offscreenCanvas.width=this.width*this.pixelDensity,this.offscreenCanvas.height=this.height*this.pixelDensity}get vertical(){return this.direction==="up"||this.direction==="down"}}const z=(n,t,e)=>({r:M(n.r,t.r,e),g:M(n.g,t.g,e),b:M(n.b,t.b,e)}),j=({r:n,g:t,b:e})=>n<255||t<255||e<255,G=(n,t)=>{let e=0,s=1/0;return t.forEach((h,l)=>{let r=Math.abs(n.h-h.h);r<s&&(e=l,s=r)}),t[e]},J=(n,t)=>[n+1,t],K=(n,t)=>[n-1,t],Q=(n,t)=>[n,t+1],Z=(n,t)=>[n,t-1],O={right:J,left:K,down:Q,up:Z};class tt extends E{constructor(e){super(e);i(this,"blurDirections");i(this,"updateColor",(e,s,h)=>{let l=(s+h*e.width)*4,r=[{r:e.data[l],g:e.data[l+1],b:e.data[l+2]}];this.blurDirections.forEach(([o,p])=>{const[y,P]=[s+o,h+p];if(!this.isOutOfBounds(y,P)){const v=(y+P*e.width)*4;r.push({r:e.data[v],g:e.data[v+1],b:e.data[v+2]})}});let c={r:r.reduce((o,{r:p})=>o+p,0)/r.length,g:r.reduce((o,{g:p})=>o+p,0)/r.length,b:r.reduce((o,{b:p})=>o+p,0)/r.length};return z(this.currentColor,c,.5)});this.blurDirections=e.blurDirections||[[2,-2]],this.blurDirections=this.blurDirections.map(([s,h])=>[s*this.pixelDensity,h*this.pixelDensity])}}class et extends H{constructor(e){super({...e,type:"blur"});i(this,"blurDirections");i(this,"createPixel",(e,s)=>new tt({x:e,y:s,pixelDensity:this.pixelDensity,width:this.width*this.pixelDensity,height:this.height*this.pixelDensity,nextCb:O[this.direction],blurDirections:this.blurDirections}));this.blurDirections=e.blurDirections||[[1,0],[10,10],[-10,0],[0,-10]]}}class it extends E{constructor(e){super(e);i(this,"palette");i(this,"paletteHSL");i(this,"updateColor",(e,s,h)=>{let l=(s+h*e.width)*4,r={r:e.data[l],g:e.data[l+1],b:e.data[l+2]};return j(r)?q(G(I(r),this.paletteHSL)):z(this.currentColor,{r:255,g:255,b:255},.01/this.pixelDensity)});this.palette=e.palette,this.paletteHSL=this.palette.map(I)}}class st extends H{constructor(e){super({...e,type:"smudge"});i(this,"palette");i(this,"createPixel",(e,s)=>{let h=new it({x:e,y:s,palette:this.palette,pixelDensity:this.pixelDensity,width:this.width*this.pixelDensity,height:this.height*this.pixelDensity,nextCb:O[this.direction]});return h.currentColor=this.palette[0],h});this.palette=e.palette}}let S=[["#241e4e","#960200","#ce6c47","#00635D","#7a4656"],["#020887","#334195","#00635D","#ff715b","#77cf63"],["#861657","#a64253","#d56aa0","#247ba0","#011638"]];const a=500,g=Math.min(2,window.devicePixelRatio),w=document.createElement("canvas"),x=w.getContext("2d");let R=document.getElementById("sketch");R?R.appendChild(w):document.body.appendChild(w);w.width=a*g;w.height=a*g;w.style.width=a+"px";w.style.height=a+"px";x.scale(g,g);let f,m,C,b;const $=new Y.Pane;let D;const nt=()=>{const n=u("span"),t=u("span"),e=u("span"),s=u("div",[u("strong","lines: "),n,u("div",[u("strong","stepMult: "),t])]),h=u("div",{class:"info"},[s,u("div",e)]);return document.body.appendChild(h),{info:h,infoLines:n,infoLinesStep:t,infoBlur:e}},{infoLines:A,infoLinesStep:ht,infoBlur:W}=nt(),rt=n=>{const t=n.isHorizontal(),e=n.isVertical();return t&&e||!t&&!e?d(["down","up","left","right"]):t?d(["down","up"]):d(["left","right"])},lt={up:"down",down:"up",left:"right",right:"left"},F=()=>{k(S),b=S[0],D.disabled=!0,W.innerHTML="";let n=d([1,2,3,5,8]),t=n>=4?Math.floor(d(20,80)):Math.floor(d(50,150)),e=Math.max(3200-(n-1)*500,800);f=new U({palette:b,width:a,height:a,pixelDensity:g,maxLines:t,stepRate:e,weight:3,stepMult:n}),m=new st({direction:rt(f),width:a,height:a,palette:b.map(V),pixelDensity:g,stepRate:150}),m.init(),A.textContent=`${f.maxLines}`,ht.textContent=`${f.stepMult}`,x.fillStyle="#fff",x.fillRect(0,0,a,a),x.strokeStyle=d(b)},ot=()=>{let n=d([1,2,3,4]),t=[];for(let e=0;e<n;e++)t.push([Math.floor(d(-10,10)),Math.floor(d(-10,10))]);C=new et({direction:lt[m.direction],width:a,height:a,pixelDensity:g,blurDirections:t}),C.init(),D.disabled=!0,W.innerHTML=t.reduce((e,[s,h],l)=>`${e}[${s}, ${h}]${l===t.length-1?"":", "}`,"<strong>blur points: </strong><br/>")};let B=0;const at=n=>{let t=n-B;B=n,f.done?m.done?C&&!C.done&&C.update(x,t):(m.update(x,t),C||(D.disabled=!1)):(f.update(x,t),A.innerHTML=`${f.linesDrawn} of ${f.maxLines}`)};$.addButton({title:"restart"}).on("click",F);D=$.addButton({title:"add blur"}).on("click",ot);F();X(at);
