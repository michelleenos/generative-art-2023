var P=Object.defineProperty;var m=(h,t,s)=>t in h?P(h,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):h[t]=s;var o=(h,t,s)=>(m(h,typeof t!="symbol"?t+"":t,s),s);import{c as v}from"./index-8d178fc0.js";function T(h,t=20,s=10){let i=.01,a=0;for(h.beginPath(),a=Math.PI;a<s*Math.PI*2;a+=i){let e=t*Math.pow(a,.5),c=Math.cos(a)*e,r=Math.sin(a)*e;h.lineTo(c,r)}h.stroke()}const g={jagged:(h,t,s,i=.8,a=.5)=>{h.beginPath(),h.moveTo(0,s*i*.5),h.lineTo(t*a,s*i),h.lineTo(t*i,s*(1-i)),h.lineTo(t*a,s*(1-i)),h.lineTo(t*i*.5,s*a)},leaf:(h,t,s,i=.2,a=.5,e=.2,c=.8)=>{h.beginPath(),h.moveTo(t,0),h.quadraticCurveTo(t*i,s*e,0,s),h.quadraticCurveTo(t*a,s*c,t,0)},crookedLine:(h,t,s)=>{h.beginPath(),h.moveTo(t,s*.1),h.lineTo(0,s*.7),h.lineTo(t*.65,s*.8),h.moveTo(t*.5,s*.8)},plgram(h,t,s){h.beginPath(),h.moveTo(t*.1,s*.9),h.lineTo(t*.4,s*.1),h.lineTo(t*.9,s*.1),h.lineTo(t*.6,s*.9),h.closePath()}};class M{constructor(t,s,i){o(this,"w");o(this,"h");o(this,"pr");o(this,"canvas");o(this,"ctx");o(this,"currentScale",1);this.w=t,this.h=s,this.pr=i;let{ctx:a,canvas:e}=v(t,s,i,!1);this.canvas=e,this.ctx=a}clear(){this.ctx.clearRect(0,0,this.w,this.h)}imageFill(t){this.ctx.drawImage(t,0,0,this.w,this.h)}stroke(t=2,s="#000"){this.ctx.strokeStyle=s,this.ctx.lineWidth=t/this.currentScale,this.ctx.stroke()}scale(t){this.currentScale*=t,this.ctx.scale(t,t)}center(){this.ctx.translate(this.w*.5,this.h*.5)}translate(t,s){this.ctx.translate(this.w*t,this.h*s)}flipHorizontal(){this.ctx.translate(this.w,0),this.ctx.scale(-1,1)}flipVertical(){this.ctx.translate(0,this.h),this.ctx.scale(1,-1)}plgram(){g.plgram(this.ctx,this.w,this.h)}triangle(t=.4){this.ctx.moveTo(1,this.h),this.ctx.lineTo(this.w,this.h),this.ctx.lineTo(this.w,this.h*t),this.ctx.closePath()}circle(t=.3){this.ctx.beginPath(),this.ctx.arc(this.w*.5,this.h*.5,Math.min(this.w,this.h)*t,0,Math.PI*2)}circles(t=5,s=.2,i=.4){this.ctx.beginPath();for(let a=0;a<5;a++){let e=s+(i-s)*a/t;e*=Math.min(this.w,this.h),this.ctx.arc(this.w*.5,this.h*.5,e,0,Math.PI*2)}}debugCirc(t=.2){let s=Math.min(this.w,this.h)*t,i=s*1.4;this.ctx.beginPath(),this.ctx.arc(this.w*.5,this.h*.5,i,0,Math.PI*.5),this.stroke(s,"hsla(0, 100%, 60%, 0.5)"),this.ctx.beginPath(),this.ctx.arc(this.w*.5,this.h*.5,s,Math.PI*.5,Math.PI),this.stroke(2,"hsla(120, 80%, 48%, 1)"),this.ctx.beginPath(),this.ctx.arc(this.w*.5,this.h*.5,i,Math.PI,Math.PI*1.5),this.stroke(s,"hsla(174, 100%, 60%, 0.5)"),this.ctx.beginPath(),this.ctx.arc(this.w*.5,this.h*.5,s,Math.PI*1.5,Math.PI*2),this.stroke(2,"hsla(256, 70%, 50%, 1)"),this.ctx.beginPath(),this.ctx.arc(this.w,this.h*.5,s,0,Math.PI*2),this.stroke(2,"hsla(27, 100%, 50%, 1)")}fermat(t=15,s=3){T(this.ctx,t,s)}crookedLine(){g.crookedLine(this.ctx,this.w,this.h)}leaf(t=.2,s=.5,i=.2,a=.8){g.leaf(this.ctx,this.w,this.h,t,s,i,a)}jagged(t=.8,s=.5){g.jagged(this.ctx,this.w,this.h,t,s)}tileToCorners(t,{reflect:s="none"}={}){let{w:i,h:a}=this,e=t.canvas.width/2,c=t.canvas.height/2;const r=()=>this.ctx.drawImage(t.canvas,0,0,e,c,0,0,i,a),l=()=>this.ctx.drawImage(t.canvas,e,0,e,c,0,0,i,a),n=()=>this.ctx.drawImage(t.canvas,e,c,e,c,0,0,i,a),x=()=>this.ctx.drawImage(t.canvas,0,c,e,c,0,0,i,a);s==="h-down"?(this.ctx.save(),r(),l(),this.ctx.translate(0,a),this.ctx.scale(1,-1),x(),n(),this.ctx.restore()):s==="h-up"?(this.ctx.save(),x(),n(),this.ctx.translate(0,a),this.ctx.scale(1,-1),r(),l(),this.ctx.restore()):s==="v-left"?(this.ctx.save(),l(),n(),this.ctx.translate(i,0),this.ctx.scale(-1,1),r(),x(),this.ctx.restore()):s==="v-right"?(this.ctx.save(),r(),x(),this.ctx.translate(i,0),this.ctx.scale(-1,1),l(),n(),this.ctx.restore()):(r(),l(),n(),x()),this.ctx.restore()}}export{M as T};
